{
    "settings": {
        "files.autoSave": "onFocusChange",
        "workbench.tips.enabled": false,
        "workbench.colorTheme": "Monokai",
        "workbench.preferredDarkColorTheme": "Solarized Dark",
        "workbench.tree.indent": 24,
        "json.schemas": [
            {
                "schema": {
                    "$schema": "http://json-schema.org/draft-07/schema#",
                    "description": "Represents a dimension",
                    "title": "Dimension",
                    "type": "object",
                    "properties": {
                        "decorate": {
                            "description": "Generate decorations or not",
                            "type": "boolean"
                        },
                        "landZoom": {
                            "description": "This zooms in the land space",
                            "type": "number"
                        },
                        "regions": {
                            "description": "Define all of the regions to include in this dimension. Dimensions -> Regions -> Biomes -> Objects etc",
                            "type": "array",
                            "items": {"type": "string"}
                        },
                        "seaZoom": {
                            "description": "This zooms oceanic biomes",
                            "type": "number"
                        },
                        "mirrorCeiling": {
                            "description": "Mirrors the generator floor into the ceiling. Think nether but worse...",
                            "type": "boolean"
                        },
                        "biomeZoom": {
                            "description": "Zoom in or out the biome size. Higher = bigger biomes",
                            "type": "number"
                        },
                        "rockPalette": {
                            "description": "The palette of blocks for 'stone'",
                            "type": "array",
                            "items": {"type": "string"}
                        },
                        "focus": {
                            "description": "Keep this either undefined or empty. Setting any biome name into this will force iris to only generate the specified biome. Great for testing.",
                            "type": "string"
                        },
                        "carving": {
                            "description": "Carve terrain or not",
                            "type": "boolean"
                        },
                        "carvingEnvelope": {
                            "description": "How much of 3D space is carved out. Higher values make carvings cross into 3d space more often (bigger)",
                            "type": "number"
                        },
                        "continentZoom": {
                            "description": "Zoom in continents",
                            "type": "number"
                        },
                        "rockZoom": {
                            "description": "The rock zoom mostly for zooming in on a wispy palette",
                            "type": "number"
                        },
                        "carvingSliverThickness": {
                            "description": "The thickness of carvings (vertical)",
                            "type": "number"
                        },
                        "postProcessing": {
                            "description": "Use post processing or not",
                            "type": "boolean"
                        },
                        "interpolationFunction": {
                            "description": "The interpolation function for splicing noise maxes together",
                            "type": "string"
                        },
                        "mutations": {
                            "description": "Define biome mutations for this dimension",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "checks": {
                                        "description": "How many tries per chunk to check for this mutation",
                                        "type": "integer"
                                    },
                                    "objects": {
                                        "description": "Objects define what schematics (iob files) iris will place in this biome mutation",
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "chance": {
                                                    "description": "The chance for this to place in a chunk. If you need multiple per chunk, set this to 1 and use density.",
                                                    "type": "number"
                                                },
                                                "meld": {
                                                    "description": "If set to true, this object will only place parts of itself where blocks already exist. Warning: Melding is very performance intensive!",
                                                    "type": "boolean"
                                                },
                                                "density": {
                                                    "description": "If the chance check passes, place this many in a single chunk",
                                                    "type": "integer"
                                                },
                                                "edit": {
                                                    "description": "Find and replace blocks",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "find": {
                                                                "description": "Find this block",
                                                                "type": "string"
                                                            },
                                                            "replace": {
                                                                "description": "Replace it with this block",
                                                                "type": "string"
                                                            },
                                                            "exact": {
                                                                "description": "Exactly match the block data or not",
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                },
                                                "snow": {
                                                    "description": "The maximum layer level of a snow filter overtop of this placement. Set to 0 to disable. Max of 1.",
                                                    "type": "number"
                                                },
                                                "bottom": {
                                                    "description": "If set to true, this object will place from the ground up instead of height checks when not y locked to the surface.",
                                                    "type": "boolean"
                                                },
                                                "rotation": {
                                                    "description": "Rotate this objects placement",
                                                    "type": "object"
                                                },
                                                "underwater": {
                                                    "description": "If set to true, objects will place on the terrain height, ignoring the water surface.",
                                                    "type": "boolean"
                                                },
                                                "place": {
                                                    "description": "List of objects to place",
                                                    "type": "array",
                                                    "items": {"type": "string"}
                                                },
                                                "onwater": {
                                                    "description": "If set to true, objects will place on the fluid height level Such as boats.",
                                                    "type": "boolean"
                                                },
                                                "translate": {
                                                    "description": "Translate this object's placement",
                                                    "type": "object"
                                                },
                                                "bore": {
                                                    "description": "If set to true, air will be placed before the schematic places.",
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    },
                                    "radius": {
                                        "description": "The scan radius for placing this mutator",
                                        "type": "integer"
                                    },
                                    "sideB": {
                                        "description": "One of The following biomes or regions must show up",
                                        "type": "array",
                                        "items": {"type": "string"}
                                    },
                                    "sideA": {
                                        "description": "One of The following biomes or regions must show up",
                                        "type": "array",
                                        "items": {"type": "string"}
                                    }
                                }
                            }
                        },
                        "terrainZoom": {
                            "description": "Zoom in or out the terrain. This stretches the terrain. Due to performance improvements, Higher than 2.0 may cause weird rounding artifacts. Lower = more terrain changes per block. Its a true zoom-out.",
                            "type": "number"
                        },
                        "coordFractureZoom": {
                            "description": "Coordinate fracturing zoom. Higher = less frequent warping, Lower = more frequent and rapid warping / swirls.",
                            "type": "number"
                        },
                        "carvingMin": {
                            "description": "Carving starts at this height",
                            "type": "integer"
                        },
                        "fluidHeight": {
                            "description": "The fluid height for this dimension",
                            "type": "integer"
                        },
                        "regionShuffle": {
                            "description": "The shuffle of regions",
                            "type": "number"
                        },
                        "coordFractureDistance": {
                            "description": "Coordinate fracturing applies noise to the input coordinates. This creates the 'iris swirls' and wavy features. The distance pushes these waves further into places they shouldnt be. This is a block value multiplier.",
                            "type": "number"
                        },
                        "carvingMax": {
                            "description": "The maximum height carving happens at",
                            "type": "integer"
                        },
                        "ceiling": {
                            "description": "The ceiling dimension. Leave blank for normal sky.",
                            "type": "string"
                        },
                        "postProcessors": {
                            "description": "Post Processors",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "phase": {
                                        "description": "The phase to run this filter in. Filters in the same phase iterate across x z chunks all at once per block. Seperate phases run another entire iteration across the chunk after the previous phase has finished.",
                                        "type": "integer"
                                    },
                                    "processor": {
                                        "description": "The processor to use. Take a look at the list of processors in docs.",
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "caveThickness": {
                            "description": "The Thickness scale of cave veins",
                            "type": "number"
                        },
                        "fluidPalette": {
                            "description": "The palette of blocks for 'water'",
                            "type": "array",
                            "items": {"type": "string"}
                        },
                        "caves": {
                            "description": "Generate caves or not.",
                            "type": "boolean"
                        },
                        "continentalShuffle": {
                            "description": "The shuffle of land vs sea",
                            "type": "number"
                        },
                        "carvingRippleThickness": {
                            "description": "The thickness of ripples on carved walls",
                            "type": "number"
                        },
                        "preventLeafDecay": {
                            "description": "Prevent Leaf decay as if placed in creative mode",
                            "type": "boolean"
                        },
                        "placeObjects": {
                            "description": "Disable this to stop placing schematics in biomes",
                            "type": "boolean"
                        },
                        "version": {
                            "description": "The version of this dimension. Changing this will stop users from accidentally upgrading (and breaking their worlds).",
                            "type": "integer"
                        },
                        "deposits": {
                            "description": "Define global deposit generators",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "minHeight": {
                                        "description": "The minimum height this deposit can generate at",
                                        "type": "integer"
                                    },
                                    "maxPerChunk": {
                                        "description": "The maximum amount of clumps per chunk",
                                        "type": "integer"
                                    },
                                    "maxHeight": {
                                        "description": "The maximum height this deposit can generate at",
                                        "type": "integer"
                                    },
                                    "minPerChunk": {
                                        "description": "The minimum amount of clumps per chunk",
                                        "type": "integer"
                                    },
                                    "minSize": {
                                        "description": "The minimum amount of deposit blocks per clump",
                                        "type": "integer"
                                    },
                                    "maxSize": {
                                        "description": "The maximum amount of deposit blocks per clump",
                                        "type": "integer"
                                    },
                                    "palette": {
                                        "description": "The palette of blocks to be used in this deposit generator",
                                        "type": "array",
                                        "items": {"type": "string"}
                                    },
                                    "varience": {
                                        "description": "Ore varience is how many different objects clumps iris will create",
                                        "type": "integer"
                                    }
                                }
                            }
                        },
                        "vanillaStructures": {
                            "description": "Generate vanilla structures",
                            "type": "boolean"
                        },
                        "caveShift": {
                            "description": "Shift the Y value of the cave networks up or down.",
                            "type": "number"
                        },
                        "carvingZoom": {
                            "description": "Carve terrain or not",
                            "type": "number"
                        },
                        "environment": {
                            "description": "The world environment",
                            "type": "string"
                        },
                        "compatability": {
                            "description": "Compatability filters",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "supplement": {
                                        "description": "Replace it with this block. Dont worry if this block is also not reconized, iris repeat this compat check.",
                                        "type": "string"
                                    },
                                    "exact": {
                                        "description": "If exact is true, it compares block data for example minecraft:some_log[axis=x]",
                                        "type": "boolean"
                                    },
                                    "when": {
                                        "description": "When iris sees this block, and it's not reconized",
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "name": {
                            "description": "The human readable name of this dimension",
                            "type": "string"
                        },
                        "dimensionAngleDeg": {
                            "description": "You can rotate the input coordinates by an angle. This can make terrain appear more natural (less sharp corners and lines). This literally rotates the entire dimension by an angle. Hint: Try 12 degrees or something not on a 90 or 45 degree angle.",
                            "type": "number"
                        },
                        "regionZoom": {
                            "description": "Change the size of regions",
                            "type": "number"
                        },
                        "caveScale": {
                            "description": "The cave web scale. Smaller values means scaled up vein networks.",
                            "type": "number"
                        },
                        "dispersion": {
                            "description": "The dispersion of materials for the rock palette",
                            "type": "string"
                        }
                    },
                    "required": [],
                    "$id": "http://volmit.com/iris-schema/irisdimension.json"
                },
                "fileMatch": ["/dimensions/*.json"]
            },
            {
                "schema": {
                    "$schema": "http://json-schema.org/draft-07/schema#",
                    "description": "Represents a biome in iris.",
                    "title": "Biome",
                    "type": "object",
                    "properties": {
                        "seaLayers": {
                            "description": "This defines the layers of materials in this biome. Each layer has a palette and min/max height and some other properties. Usually a grassy/sandy layer then a dirt layer then a stone layer. Iris will fill in the remaining blocks below your layers with stone.",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "minHeight": {
                                        "description": "The min thickness of this layer",
                                        "type": "integer"
                                    },
                                    "terrainZoom": {
                                        "description": "The terrain zoom mostly for zooming in on a wispy palette",
                                        "type": "number"
                                    },
                                    "maxHeight": {
                                        "description": "The max thickness of this layer",
                                        "type": "integer"
                                    },
                                    "palette": {
                                        "description": "The palette of blocks to be used in this layer",
                                        "type": "array",
                                        "items": {"type": "string"}
                                    },
                                    "dispersion": {
                                        "description": "The dispersion of materials from the palette",
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "biomeSkyScatter": {
                            "description": "Since 1.13 supports 3D biomes, you can add different derivative colors for anything above the terrain. (Think swampy tree leaves with a desert looking grass surface)",
                            "type": "array",
                            "items": {"type": "string"}
                        },
                        "objects": {
                            "description": "Objects define what schematics (iob files) iris will place in this biome",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "chance": {
                                        "description": "The chance for this to place in a chunk. If you need multiple per chunk, set this to 1 and use density.",
                                        "type": "number"
                                    },
                                    "meld": {
                                        "description": "If set to true, this object will only place parts of itself where blocks already exist. Warning: Melding is very performance intensive!",
                                        "type": "boolean"
                                    },
                                    "density": {
                                        "description": "If the chance check passes, place this many in a single chunk",
                                        "type": "integer"
                                    },
                                    "edit": {
                                        "description": "Find and replace blocks",
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "find": {
                                                    "description": "Find this block",
                                                    "type": "string"
                                                },
                                                "replace": {
                                                    "description": "Replace it with this block",
                                                    "type": "string"
                                                },
                                                "exact": {
                                                    "description": "Exactly match the block data or not",
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    },
                                    "snow": {
                                        "description": "The maximum layer level of a snow filter overtop of this placement. Set to 0 to disable. Max of 1.",
                                        "type": "number"
                                    },
                                    "bottom": {
                                        "description": "If set to true, this object will place from the ground up instead of height checks when not y locked to the surface.",
                                        "type": "boolean"
                                    },
                                    "rotation": {
                                        "description": "Rotate this objects placement",
                                        "type": "object"
                                    },
                                    "underwater": {
                                        "description": "If set to true, objects will place on the terrain height, ignoring the water surface.",
                                        "type": "boolean"
                                    },
                                    "place": {
                                        "description": "List of objects to place",
                                        "type": "array",
                                        "items": {"type": "string"}
                                    },
                                    "onwater": {
                                        "description": "If set to true, objects will place on the fluid height level Such as boats.",
                                        "type": "boolean"
                                    },
                                    "translate": {
                                        "description": "Translate this object's placement",
                                        "type": "object"
                                    },
                                    "bore": {
                                        "description": "If set to true, air will be placed before the schematic places.",
                                        "type": "boolean"
                                    }
                                }
                            }
                        },
                        "biomeZoom": {
                            "description": "This zooms in the biome colors if multiple derivatives are chosen",
                            "type": "number"
                        },
                        "structures": {
                            "description": "A list of structure tilesets",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tileset": {
                                        "description": "The structure tileset to use",
                                        "type": "string"
                                    },
                                    "zoom": {
                                        "description": "The structure chance zoom. Higher = bigger cells, further away",
                                        "type": "number"
                                    },
                                    "shuffle": {
                                        "description": "The chance cell shuffle (rougher edges)",
                                        "type": "number"
                                    },
                                    "ratio": {
                                        "description": "The ratio. Lower values means cells can get closer to other cells. Negative values means make veins of structures",
                                        "type": "number"
                                    },
                                    "rarity": {
                                        "description": "The rarity for this structure",
                                        "type": "integer"
                                    },
                                    "height": {
                                        "description": "The height or -1 for surface",
                                        "type": "integer"
                                    }
                                }
                            }
                        },
                        "biomeDispersion": {
                            "description": "This changes the dispersion of the biome colors if multiple derivatives are chosen",
                            "type": "string"
                        },
                        "derivative": {
                            "description": "The raw derivative of this biome. This is required or the terrain will not properly generate. Use any vanilla biome type. Look in examples/biome-list.txt",
                            "type": "string"
                        },
                        "deposits": {
                            "description": "Define biome deposit generators that add onto the existing regional and global deposit generators",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "minHeight": {
                                        "description": "The minimum height this deposit can generate at",
                                        "type": "integer"
                                    },
                                    "maxPerChunk": {
                                        "description": "The maximum amount of clumps per chunk",
                                        "type": "integer"
                                    },
                                    "maxHeight": {
                                        "description": "The maximum height this deposit can generate at",
                                        "type": "integer"
                                    },
                                    "minPerChunk": {
                                        "description": "The minimum amount of clumps per chunk",
                                        "type": "integer"
                                    },
                                    "minSize": {
                                        "description": "The minimum amount of deposit blocks per clump",
                                        "type": "integer"
                                    },
                                    "maxSize": {
                                        "description": "The maximum amount of deposit blocks per clump",
                                        "type": "integer"
                                    },
                                    "palette": {
                                        "description": "The palette of blocks to be used in this deposit generator",
                                        "type": "array",
                                        "items": {"type": "string"}
                                    },
                                    "varience": {
                                        "description": "Ore varience is how many different objects clumps iris will create",
                                        "type": "integer"
                                    }
                                }
                            }
                        },
                        "slab": {
                            "description": "The default slab if iris decides to place a slab in this biome. Default is no slab.",
                            "type": "object"
                        },
                        "effects": {
                            "description": "The name of the region",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "particleAltX": {
                                        "description": "The alt x, usually represents motion if the particle count is zero. Otherwise an offset.",
                                        "type": "number"
                                    },
                                    "particleAway": {
                                        "description": "The effect distance start away",
                                        "type": "integer"
                                    },
                                    "particleAltY": {
                                        "description": "The alt y, usually represents motion if the particle count is zero. Otherwise an offset.",
                                        "type": "number"
                                    },
                                    "particleAltZ": {
                                        "description": "The alt z, usually represents motion if the particle count is zero. Otherwise an offset.",
                                        "type": "number"
                                    },
                                    "chance": {
                                        "description": "The chance is 1 in CHANCE per interval",
                                        "type": "integer"
                                    },
                                    "maxPitch": {
                                        "description": "The max sound pitch",
                                        "type": "number"
                                    },
                                    "sound": {
                                        "description": "The sound to play",
                                        "type": "string"
                                    },
                                    "particleOffset": {
                                        "description": "Randomly offset from the surface to this surface+value",
                                        "type": "integer"
                                    },
                                    "randomAltY": {
                                        "description": "Randomize the altY by -altY to altY",
                                        "type": "boolean"
                                    },
                                    "randomAltX": {
                                        "description": "Randomize the altX by -altX to altX",
                                        "type": "boolean"
                                    },
                                    "randomAltZ": {
                                        "description": "Randomize the altZ by -altZ to altZ",
                                        "type": "boolean"
                                    },
                                    "particleCount": {
                                        "description": "The particle count. Try setting to zero for using the alt xyz to a motion value instead of an offset",
                                        "type": "integer"
                                    },
                                    "volume": {
                                        "description": "The sound volume.",
                                        "type": "number"
                                    },
                                    "potionTicksMin": {
                                        "description": "The min time the potion will last for",
                                        "type": "integer"
                                    },
                                    "potionEffect": {
                                        "description": "The potion effect to apply in this area",
                                        "type": "string"
                                    },
                                    "minPitch": {
                                        "description": "The minimum sound pitch",
                                        "type": "number"
                                    },
                                    "particleDistanceWidth": {
                                        "description": "How wide the particles can play (player's view left and right) RADIUS",
                                        "type": "integer"
                                    },
                                    "particleEffect": {
                                        "description": "The particle effect to apply in the area",
                                        "type": "string"
                                    },
                                    "particleDistance": {
                                        "description": "How far away from the player particles can play",
                                        "type": "integer"
                                    },
                                    "extra": {
                                        "description": "An extra value for some particles... Which bukkit doesn't even document.",
                                        "type": "number"
                                    },
                                    "potionStrength": {
                                        "description": "The Potion Strength",
                                        "type": "integer"
                                    },
                                    "soundDistance": {
                                        "description": "The max distance from the player the sound will play",
                                        "type": "integer"
                                    },
                                    "interval": {
                                        "description": "The effect interval in milliseconds",
                                        "type": "integer"
                                    },
                                    "potionTicksMax": {
                                        "description": "The max time the potion will last for",
                                        "type": "integer"
                                    }
                                }
                            }
                        },
                        "children": {
                            "description": "List any biome names (file names without.json) here as children. Portions of this biome can sometimes morph into their children. Iris supports cyclic relationships such as A > B > A > B. Iris will stop checking 9 biomes down the tree.",
                            "type": "array",
                            "items": {"type": "string"}
                        },
                        "decorators": {
                            "description": "Decorators are used for things like tall grass, bisected flowers, and even kelp or cactus (random heights)",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "partOf": {
                                        "description": "Tells iris where this decoration is a part of. I.e. SHORE_LINE or SEA_SURFACE",
                                        "type": "string"
                                    },
                                    "verticalZoom": {
                                        "description": "The vertical zoom is for wispy stack heights. Zooming this in makes stack heights more slowly change over a distance",
                                        "type": "number"
                                    },
                                    "chance": {
                                        "description": "The chance for this decorator to decorate at a given X,Y coordinate. This is hit 256 times per chunk (per surface block)",
                                        "type": "number"
                                    },
                                    "variance": {
                                        "description": "The varience dispersion is used when multiple blocks are put in the palette. Scatter scrambles them, Wispy shows streak-looking varience",
                                        "type": "string"
                                    },
                                    "verticalVariance": {
                                        "description": "If this decorator has a height more than 1 this changes how it picks the height between your maxes. Scatter = random, Wispy = wavy heights",
                                        "type": "string"
                                    },
                                    "stackMax": {
                                        "description": "The maximum repeat stack height",
                                        "type": "integer"
                                    },
                                    "zoom": {
                                        "description": "The zoom is for zooming in or out wispy dispersions. Makes patches bigger the higher this zoom value is/",
                                        "type": "number"
                                    },
                                    "palette": {
                                        "description": "The palette of blocks to pick from when this decorator needs to place.",
                                        "type": "array",
                                        "items": {"type": "string"}
                                    },
                                    "dispersion": {
                                        "description": "Dispersion is used to pick places to spawn. Scatter randomly places them (vanilla) or Wispy for a streak like patch system.",
                                        "type": "string"
                                    },
                                    "stackMin": {
                                        "description": "The minimum repeat stack height (setting to 3 would stack 3 of <block> on top of each other",
                                        "type": "integer"
                                    }
                                }
                            }
                        },
                        "name": {
                            "description": "This is the human readable name for this biome. This can and should be different than the file name. This is not used for loading biomes in other objects.",
                            "type": "string"
                        },
                        "layers": {
                            "description": "This defines the layers of materials in this biome. Each layer has a palette and min/max height and some other properties. Usually a grassy/sandy layer then a dirt layer then a stone layer. Iris will fill in the remaining blocks below your layers with stone.",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "minHeight": {
                                        "description": "The min thickness of this layer",
                                        "type": "integer"
                                    },
                                    "terrainZoom": {
                                        "description": "The terrain zoom mostly for zooming in on a wispy palette",
                                        "type": "number"
                                    },
                                    "maxHeight": {
                                        "description": "The max thickness of this layer",
                                        "type": "integer"
                                    },
                                    "palette": {
                                        "description": "The palette of blocks to be used in this layer",
                                        "type": "array",
                                        "items": {"type": "string"}
                                    },
                                    "dispersion": {
                                        "description": "The dispersion of materials from the palette",
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "generators": {
                            "description": "Generators for this biome. Multiple generators with different interpolation sizes will mix with other biomes how you would expect. This defines your biome height relative to the fluid height. Use negative for oceans.",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "min": {
                                        "description": "The min block value (value + fluidHeight)",
                                        "type": "integer"
                                    },
                                    "max": {
                                        "description": "The max block value (value + fluidHeight)",
                                        "type": "integer"
                                    },
                                    "generator": {
                                        "description": "The generator id",
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "childShrinkFactor": {
                            "description": "If this biome has children biomes, and the gen layer chooses one of this biomes children, how much smaller will it be (inside of this biome). Higher values means a smaller biome relative to this biome's size. Set higher than 1.0 and below 3.0 for best results.",
                            "type": "number"
                        },
                        "lockLayers": {
                            "description": "Layers no longer descend from the surface block, they descend from the max possible height the biome can produce (constant) creating mesa like layers.",
                            "type": "boolean"
                        },
                        "biomeScatter": {
                            "description": "You can instead specify multiple biome derivatives to randomly scatter colors in this biome",
                            "type": "array",
                            "items": {"type": "string"}
                        },
                        "wall": {
                            "description": "The default wall if iris decides to place a wall higher than 2 blocks (steep hills or possibly cliffs)",
                            "type": "object"
                        },
                        "rarity": {
                            "description": "The rarity of this biome (integer)",
                            "type": "integer"
                        }
                    },
                    "required": [],
                    "$id": "http://volmit.com/iris-schema/irisbiome.json"
                },
                "fileMatch": ["/biomes/*.json"]
            },
            {
                "schema": {
                    "$schema": "http://json-schema.org/draft-07/schema#",
                    "description": "Represents an iris region",
                    "title": "Region",
                    "type": "object",
                    "properties": {
                        "islandBiomes": {
                            "description": "A list of root-level biomes in this region. Don't specify child biomes of other biomes here. Just the root parents.",
                            "type": "array",
                            "items": {"type": "string"}
                        },
                        "islandBiomeZoom": {
                            "description": "How large island biomes are in this region",
                            "type": "number"
                        },
                        "spotBiomes": {
                            "description": "Spot biomes splotch themselves across this region like lakes",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "as": {
                                        "description": "What type this spot is (i.e. target SEA but as LAND) like an island. Default matches the target type",
                                        "type": "string"
                                    },
                                    "biome": {
                                        "description": "The biome to be placed",
                                        "type": "string"
                                    },
                                    "scale": {
                                        "description": "The scale of splotches",
                                        "type": "number"
                                    },
                                    "noiseMultiplier": {
                                        "description": "Use the distance from cell value to add or remove noise value. (Forces depth or height)",
                                        "type": "number"
                                    },
                                    "air": {
                                        "description": "If the noise multiplier is below zero, what should the air be filled with?",
                                        "type": "object"
                                    },
                                    "type": {
                                        "description": "Where this spot overrides. Land sea or shore",
                                        "type": "string"
                                    },
                                    "shuffle": {
                                        "description": "The shuffle or how natural the splotch looks like (anti-polygon)",
                                        "type": "number"
                                    },
                                    "rarity": {
                                        "description": "Rarity is how often this splotch appears. higher = less often",
                                        "type": "number"
                                    }
                                }
                            }
                        },
                        "skylandBiomeZoom": {
                            "description": "How large skyland biomes are in this region",
                            "type": "number"
                        },
                        "caveBiomes": {
                            "description": "A list of root-level biomes in this region. Don't specify child biomes of other biomes here. Just the root parents.",
                            "type": "array",
                            "items": {"type": "string"}
                        },
                        "shoreHeightMin": {
                            "description": "The min shore height",
                            "type": "number"
                        },
                        "shoreBiomes": {
                            "description": "A list of root-level biomes in this region. Don't specify child biomes of other biomes here. Just the root parents.",
                            "type": "array",
                            "items": {"type": "string"}
                        },
                        "skylandBiomes": {
                            "description": "A list of root-level biomes in this region. Don't specify child biomes of other biomes here. Just the root parents.",
                            "type": "array",
                            "items": {"type": "string"}
                        },
                        "shoreHeightZoom": {
                            "description": "The varience of the shore height",
                            "type": "number"
                        },
                        "shoreRatio": {
                            "description": "The shore ration (How much percent of land should be a shore)",
                            "type": "number"
                        },
                        "ridgeBiomes": {
                            "description": "Ridge biomes create a vein-like network like rivers through this region",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "as": {
                                        "description": "What type this spot is (i.e. target SEA but as LAND) like an island. Default matches the target type",
                                        "type": "string"
                                    },
                                    "chance": {
                                        "description": "The chance this biome will be placed in a given spot",
                                        "type": "number"
                                    },
                                    "thickness": {
                                        "description": "The thickness of the vein",
                                        "type": "number"
                                    },
                                    "biome": {
                                        "description": "The biome name",
                                        "type": "string"
                                    },
                                    "scale": {
                                        "description": "The scale of the biome ridge. Higher values = wider veins & bigger connected cells",
                                        "type": "number"
                                    },
                                    "noiseMultiplier": {
                                        "description": "Use the distance from cell value to add or remove noise value. (Forces depth or height)",
                                        "type": "number"
                                    },
                                    "air": {
                                        "description": "If the noise multiplier is below zero, what should the air be filled with?",
                                        "type": "object"
                                    },
                                    "type": {
                                        "description": "The type this biome should override (land sea or shore)",
                                        "type": "string"
                                    },
                                    "shuffle": {
                                        "description": "The shuffle, how 'natural' this looks. Compared to pure polygons",
                                        "type": "number"
                                    },
                                    "chanceShuffle": {
                                        "description": "The chance shuffle (polygon cell chances)",
                                        "type": "number"
                                    },
                                    "chanceScale": {
                                        "description": "The chance scale (cell chances)",
                                        "type": "number"
                                    }
                                }
                            }
                        },
                        "biomeShuffle": {
                            "description": "The scrambling between biomes",
                            "type": "number"
                        },
                        "shoreBiomeZoom": {
                            "description": "How large shore biomes are in this region",
                            "type": "number"
                        },
                        "structures": {
                            "description": "A list of structure tilesets",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "tileset": {
                                        "description": "The structure tileset to use",
                                        "type": "string"
                                    },
                                    "zoom": {
                                        "description": "The structure chance zoom. Higher = bigger cells, further away",
                                        "type": "number"
                                    },
                                    "shuffle": {
                                        "description": "The chance cell shuffle (rougher edges)",
                                        "type": "number"
                                    },
                                    "ratio": {
                                        "description": "The ratio. Lower values means cells can get closer to other cells. Negative values means make veins of structures",
                                        "type": "number"
                                    },
                                    "rarity": {
                                        "description": "The rarity for this structure",
                                        "type": "integer"
                                    },
                                    "height": {
                                        "description": "The height or -1 for surface",
                                        "type": "integer"
                                    }
                                }
                            }
                        },
                        "caveBiomeZoom": {
                            "description": "How large cave biomes are in this region",
                            "type": "number"
                        },
                        "landBiomes": {
                            "description": "A list of root-level biomes in this region. Don't specify child biomes of other biomes here. Just the root parents.",
                            "type": "array",
                            "items": {"type": "string"}
                        },
                        "seaBiomeZoom": {
                            "description": "How large sea biomes are in this region",
                            "type": "number"
                        },
                        "biomeImplosionRatio": {
                            "description": "The biome implosion ratio, how much to implode biomes into children (chance)",
                            "type": "number"
                        },
                        "seaBiomes": {
                            "description": "A list of root-level biomes in this region. Don't specify child biomes of other biomes here. Just the root parents.",
                            "type": "array",
                            "items": {"type": "string"}
                        },
                        "deposits": {
                            "description": "Define regional deposit generators that add onto the global deposit generators",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "minHeight": {
                                        "description": "The minimum height this deposit can generate at",
                                        "type": "integer"
                                    },
                                    "maxPerChunk": {
                                        "description": "The maximum amount of clumps per chunk",
                                        "type": "integer"
                                    },
                                    "maxHeight": {
                                        "description": "The maximum height this deposit can generate at",
                                        "type": "integer"
                                    },
                                    "minPerChunk": {
                                        "description": "The minimum amount of clumps per chunk",
                                        "type": "integer"
                                    },
                                    "minSize": {
                                        "description": "The minimum amount of deposit blocks per clump",
                                        "type": "integer"
                                    },
                                    "maxSize": {
                                        "description": "The maximum amount of deposit blocks per clump",
                                        "type": "integer"
                                    },
                                    "palette": {
                                        "description": "The palette of blocks to be used in this deposit generator",
                                        "type": "array",
                                        "items": {"type": "string"}
                                    },
                                    "varience": {
                                        "description": "Ore varience is how many different objects clumps iris will create",
                                        "type": "integer"
                                    }
                                }
                            }
                        },
                        "landBiomeZoom": {
                            "description": "How large land biomes are in this region",
                            "type": "number"
                        },
                        "effects": {
                            "description": "The name of the region",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "particleAltX": {
                                        "description": "The alt x, usually represents motion if the particle count is zero. Otherwise an offset.",
                                        "type": "number"
                                    },
                                    "particleAway": {
                                        "description": "The effect distance start away",
                                        "type": "integer"
                                    },
                                    "particleAltY": {
                                        "description": "The alt y, usually represents motion if the particle count is zero. Otherwise an offset.",
                                        "type": "number"
                                    },
                                    "particleAltZ": {
                                        "description": "The alt z, usually represents motion if the particle count is zero. Otherwise an offset.",
                                        "type": "number"
                                    },
                                    "chance": {
                                        "description": "The chance is 1 in CHANCE per interval",
                                        "type": "integer"
                                    },
                                    "maxPitch": {
                                        "description": "The max sound pitch",
                                        "type": "number"
                                    },
                                    "sound": {
                                        "description": "The sound to play",
                                        "type": "string"
                                    },
                                    "particleOffset": {
                                        "description": "Randomly offset from the surface to this surface+value",
                                        "type": "integer"
                                    },
                                    "randomAltY": {
                                        "description": "Randomize the altY by -altY to altY",
                                        "type": "boolean"
                                    },
                                    "randomAltX": {
                                        "description": "Randomize the altX by -altX to altX",
                                        "type": "boolean"
                                    },
                                    "randomAltZ": {
                                        "description": "Randomize the altZ by -altZ to altZ",
                                        "type": "boolean"
                                    },
                                    "particleCount": {
                                        "description": "The particle count. Try setting to zero for using the alt xyz to a motion value instead of an offset",
                                        "type": "integer"
                                    },
                                    "volume": {
                                        "description": "The sound volume.",
                                        "type": "number"
                                    },
                                    "potionTicksMin": {
                                        "description": "The min time the potion will last for",
                                        "type": "integer"
                                    },
                                    "potionEffect": {
                                        "description": "The potion effect to apply in this area",
                                        "type": "string"
                                    },
                                    "minPitch": {
                                        "description": "The minimum sound pitch",
                                        "type": "number"
                                    },
                                    "particleDistanceWidth": {
                                        "description": "How wide the particles can play (player's view left and right) RADIUS",
                                        "type": "integer"
                                    },
                                    "particleEffect": {
                                        "description": "The particle effect to apply in the area",
                                        "type": "string"
                                    },
                                    "particleDistance": {
                                        "description": "How far away from the player particles can play",
                                        "type": "integer"
                                    },
                                    "extra": {
                                        "description": "An extra value for some particles... Which bukkit doesn't even document.",
                                        "type": "number"
                                    },
                                    "potionStrength": {
                                        "description": "The Potion Strength",
                                        "type": "integer"
                                    },
                                    "soundDistance": {
                                        "description": "The max distance from the player the sound will play",
                                        "type": "integer"
                                    },
                                    "interval": {
                                        "description": "The effect interval in milliseconds",
                                        "type": "integer"
                                    },
                                    "potionTicksMax": {
                                        "description": "The max time the potion will last for",
                                        "type": "integer"
                                    }
                                }
                            }
                        },
                        "name": {
                            "description": "The name of the region",
                            "type": "string"
                        },
                        "shoreHeightMax": {
                            "description": "The the max shore height",
                            "type": "number"
                        },
                        "rarity": {
                            "description": "The rarity of the region",
                            "type": "integer"
                        }
                    },
                    "required": [],
                    "$id": "http://volmit.com/iris-schema/irisregion.json"
                },
                "fileMatch": ["/regions/*.json"]
            },
            {
                "schema": {
                    "$schema": "http://json-schema.org/draft-07/schema#",
                    "description": "Represents a composite generator of noise gens",
                    "title": "Generator",
                    "type": "object",
                    "properties": {
                        "cellPercentSize": {
                            "description": "How big are the cells (X,Z) relative to the veins that touch them. Between 0 and 1. 0.1 means thick veins, small cells.",
                            "type": "number"
                        },
                        "cellFractureHeight": {
                            "description": "The height of fracture cells. Set to 0 to disable",
                            "type": "number"
                        },
                        "seed": {
                            "description": "The seed for this generator",
                            "type": "integer"
                        },
                        "interpolationScale": {
                            "description": "The interpolation distance scale (blocks) when two biomes use different heights but this same generator",
                            "type": "number"
                        },
                        "zoom": {
                            "description": "The zoom or frequency.",
                            "type": "number"
                        },
                        "cliffHeightMin": {
                            "description": "Cliff Height Min. Disable with 0 for min and max",
                            "type": "number"
                        },
                        "cliffHeightGenerator": {
                            "description": "The noise gen for cliff height.",
                            "type": "object"
                        },
                        "offsetX": {
                            "description": "The offset to shift this noise x",
                            "type": "number"
                        },
                        "offsetZ": {
                            "description": "The offset to shift this noise z",
                            "type": "number"
                        },
                        "interpolationFunction": {
                            "description": "The interpolation method when two biomes use different heights but this same generator",
                            "type": "string"
                        },
                        "cellFractureShuffle": {
                            "description": "Cell Fracture Coordinate Shuffling",
                            "type": "number"
                        },
                        "composite": {
                            "description": "The list of noise gens this gen contains.",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "sinCentered": {
                                        "description": "Apply a sin-center curve on the output (0, and 1 = 0 and 0.5 = 1.0 using a sinoid shape.)",
                                        "type": "boolean"
                                    },
                                    "seed": {
                                        "description": "The seed",
                                        "type": "integer"
                                    },
                                    "parametric": {
                                        "description": "Apply a parametric curve on the output",
                                        "type": "boolean"
                                    },
                                    "zoom": {
                                        "description": "The coordinate input zoom",
                                        "type": "number"
                                    },
                                    "enabled": {
                                        "description": "Enable / disable. Outputs offsetY if disabled",
                                        "type": "boolean"
                                    },
                                    "fracture": {
                                        "description": "Apply a child noise generator to fracture the input coordinates of this generator",
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "sinCentered": {
                                                    "description": "Apply a sin-center curve on the output (0, and 1 = 0 and 0.5 = 1.0 using a sinoid shape.)",
                                                    "type": "boolean"
                                                },
                                                "seed": {
                                                    "description": "The seed",
                                                    "type": "integer"
                                                },
                                                "parametric": {
                                                    "description": "Apply a parametric curve on the output",
                                                    "type": "boolean"
                                                },
                                                "zoom": {
                                                    "description": "The coordinate input zoom",
                                                    "type": "number"
                                                },
                                                "enabled": {
                                                    "description": "Enable / disable. Outputs offsetY if disabled",
                                                    "type": "boolean"
                                                },
                                                "fracture": {
                                                    "description": "Apply a child noise generator to fracture the input coordinates of this generator",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "sinCentered": {
                                                                "description": "Apply a sin-center curve on the output (0, and 1 = 0 and 0.5 = 1.0 using a sinoid shape.)",
                                                                "type": "boolean"
                                                            },
                                                            "seed": {
                                                                "description": "The seed",
                                                                "type": "integer"
                                                            },
                                                            "parametric": {
                                                                "description": "Apply a parametric curve on the output",
                                                                "type": "boolean"
                                                            },
                                                            "zoom": {
                                                                "description": "The coordinate input zoom",
                                                                "type": "number"
                                                            },
                                                            "enabled": {
                                                                "description": "Enable / disable. Outputs offsetY if disabled",
                                                                "type": "boolean"
                                                            },
                                                            "fracture": {
                                                                "description": "Apply a child noise generator to fracture the input coordinates of this generator",
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "sinCentered": {
                                                                            "description": "Apply a sin-center curve on the output (0, and 1 = 0 and 0.5 = 1.0 using a sinoid shape.)",
                                                                            "type": "boolean"
                                                                        },
                                                                        "seed": {
                                                                            "description": "The seed",
                                                                            "type": "integer"
                                                                        },
                                                                        "parametric": {
                                                                            "description": "Apply a parametric curve on the output",
                                                                            "type": "boolean"
                                                                        },
                                                                        "zoom": {
                                                                            "description": "The coordinate input zoom",
                                                                            "type": "number"
                                                                        },
                                                                        "enabled": {
                                                                            "description": "Enable / disable. Outputs offsetY if disabled",
                                                                            "type": "boolean"
                                                                        },
                                                                        "fracture": {
                                                                            "description": "Apply a child noise generator to fracture the input coordinates of this generator",
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "sinCentered": {
                                                                                        "description": "Apply a sin-center curve on the output (0, and 1 = 0 and 0.5 = 1.0 using a sinoid shape.)",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "seed": {
                                                                                        "description": "The seed",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "parametric": {
                                                                                        "description": "Apply a parametric curve on the output",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "zoom": {
                                                                                        "description": "The coordinate input zoom",
                                                                                        "type": "number"
                                                                                    },
                                                                                    "enabled": {
                                                                                        "description": "Enable / disable. Outputs offsetY if disabled",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "fracture": {
                                                                                        "description": "Apply a child noise generator to fracture the input coordinates of this generator",
                                                                                        "type": "array",
                                                                                        "items": {
                                                                                            "type": "object",
                                                                                            "properties": {
                                                                                                "sinCentered": {
                                                                                                    "description": "Apply a sin-center curve on the output (0, and 1 = 0 and 0.5 = 1.0 using a sinoid shape.)",
                                                                                                    "type": "boolean"
                                                                                                },
                                                                                                "seed": {
                                                                                                    "description": "The seed",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "parametric": {
                                                                                                    "description": "Apply a parametric curve on the output",
                                                                                                    "type": "boolean"
                                                                                                },
                                                                                                "zoom": {
                                                                                                    "description": "The coordinate input zoom",
                                                                                                    "type": "number"
                                                                                                },
                                                                                                "enabled": {
                                                                                                    "description": "Enable / disable. Outputs offsetY if disabled",
                                                                                                    "type": "boolean"
                                                                                                },
                                                                                                "fracture": {
                                                                                                    "description": "Apply a child noise generator to fracture the input coordinates of this generator",
                                                                                                    "type": "array",
                                                                                                    "items": {
                                                                                                        "type": "object",
                                                                                                        "properties": {}
                                                                                                    }
                                                                                                },
                                                                                                "offsetX": {
                                                                                                    "description": "Coordinate offset x",
                                                                                                    "type": "number"
                                                                                                },
                                                                                                "octaves": {
                                                                                                    "description": "Multiple octaves for multple generators of changing zooms added together",
                                                                                                    "type": "integer"
                                                                                                },
                                                                                                "negative": {
                                                                                                    "description": "Reverse the output. So that noise = -noise + opacity",
                                                                                                    "type": "boolean"
                                                                                                },
                                                                                                "offsetZ": {
                                                                                                    "description": "Coordinate offset z",
                                                                                                    "type": "number"
                                                                                                },
                                                                                                "offsetY": {
                                                                                                    "description": "Height output offset y",
                                                                                                    "type": "number"
                                                                                                },
                                                                                                "irisBased": {
                                                                                                    "description": "If this generator uses the default iris swirly/wispy noise generator. Set to false for pure simplex.",
                                                                                                    "type": "boolean"
                                                                                                },
                                                                                                "opacity": {
                                                                                                    "description": "The output multiplier",
                                                                                                    "type": "number"
                                                                                                },
                                                                                                "bezier": {
                                                                                                    "description": "Apply a bezier curve on the output",
                                                                                                    "type": "boolean"
                                                                                                },
                                                                                                "exponent": {
                                                                                                    "description": "The exponent noise^EXPONENT",
                                                                                                    "type": "number"
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "offsetX": {
                                                                                        "description": "Coordinate offset x",
                                                                                        "type": "number"
                                                                                    },
                                                                                    "octaves": {
                                                                                        "description": "Multiple octaves for multple generators of changing zooms added together",
                                                                                        "type": "integer"
                                                                                    },
                                                                                    "negative": {
                                                                                        "description": "Reverse the output. So that noise = -noise + opacity",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "offsetZ": {
                                                                                        "description": "Coordinate offset z",
                                                                                        "type": "number"
                                                                                    },
                                                                                    "offsetY": {
                                                                                        "description": "Height output offset y",
                                                                                        "type": "number"
                                                                                    },
                                                                                    "irisBased": {
                                                                                        "description": "If this generator uses the default iris swirly/wispy noise generator. Set to false for pure simplex.",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "opacity": {
                                                                                        "description": "The output multiplier",
                                                                                        "type": "number"
                                                                                    },
                                                                                    "bezier": {
                                                                                        "description": "Apply a bezier curve on the output",
                                                                                        "type": "boolean"
                                                                                    },
                                                                                    "exponent": {
                                                                                        "description": "The exponent noise^EXPONENT",
                                                                                        "type": "number"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "offsetX": {
                                                                            "description": "Coordinate offset x",
                                                                            "type": "number"
                                                                        },
                                                                        "octaves": {
                                                                            "description": "Multiple octaves for multple generators of changing zooms added together",
                                                                            "type": "integer"
                                                                        },
                                                                        "negative": {
                                                                            "description": "Reverse the output. So that noise = -noise + opacity",
                                                                            "type": "boolean"
                                                                        },
                                                                        "offsetZ": {
                                                                            "description": "Coordinate offset z",
                                                                            "type": "number"
                                                                        },
                                                                        "offsetY": {
                                                                            "description": "Height output offset y",
                                                                            "type": "number"
                                                                        },
                                                                        "irisBased": {
                                                                            "description": "If this generator uses the default iris swirly/wispy noise generator. Set to false for pure simplex.",
                                                                            "type": "boolean"
                                                                        },
                                                                        "opacity": {
                                                                            "description": "The output multiplier",
                                                                            "type": "number"
                                                                        },
                                                                        "bezier": {
                                                                            "description": "Apply a bezier curve on the output",
                                                                            "type": "boolean"
                                                                        },
                                                                        "exponent": {
                                                                            "description": "The exponent noise^EXPONENT",
                                                                            "type": "number"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "offsetX": {
                                                                "description": "Coordinate offset x",
                                                                "type": "number"
                                                            },
                                                            "octaves": {
                                                                "description": "Multiple octaves for multple generators of changing zooms added together",
                                                                "type": "integer"
                                                            },
                                                            "negative": {
                                                                "description": "Reverse the output. So that noise = -noise + opacity",
                                                                "type": "boolean"
                                                            },
                                                            "offsetZ": {
                                                                "description": "Coordinate offset z",
                                                                "type": "number"
                                                            },
                                                            "offsetY": {
                                                                "description": "Height output offset y",
                                                                "type": "number"
                                                            },
                                                            "irisBased": {
                                                                "description": "If this generator uses the default iris swirly/wispy noise generator. Set to false for pure simplex.",
                                                                "type": "boolean"
                                                            },
                                                            "opacity": {
                                                                "description": "The output multiplier",
                                                                "type": "number"
                                                            },
                                                            "bezier": {
                                                                "description": "Apply a bezier curve on the output",
                                                                "type": "boolean"
                                                            },
                                                            "exponent": {
                                                                "description": "The exponent noise^EXPONENT",
                                                                "type": "number"
                                                            }
                                                        }
                                                    }
                                                },
                                                "offsetX": {
                                                    "description": "Coordinate offset x",
                                                    "type": "number"
                                                },
                                                "octaves": {
                                                    "description": "Multiple octaves for multple generators of changing zooms added together",
                                                    "type": "integer"
                                                },
                                                "negative": {
                                                    "description": "Reverse the output. So that noise = -noise + opacity",
                                                    "type": "boolean"
                                                },
                                                "offsetZ": {
                                                    "description": "Coordinate offset z",
                                                    "type": "number"
                                                },
                                                "offsetY": {
                                                    "description": "Height output offset y",
                                                    "type": "number"
                                                },
                                                "irisBased": {
                                                    "description": "If this generator uses the default iris swirly/wispy noise generator. Set to false for pure simplex.",
                                                    "type": "boolean"
                                                },
                                                "opacity": {
                                                    "description": "The output multiplier",
                                                    "type": "number"
                                                },
                                                "bezier": {
                                                    "description": "Apply a bezier curve on the output",
                                                    "type": "boolean"
                                                },
                                                "exponent": {
                                                    "description": "The exponent noise^EXPONENT",
                                                    "type": "number"
                                                }
                                            }
                                        }
                                    },
                                    "offsetX": {
                                        "description": "Coordinate offset x",
                                        "type": "number"
                                    },
                                    "octaves": {
                                        "description": "Multiple octaves for multple generators of changing zooms added together",
                                        "type": "integer"
                                    },
                                    "negative": {
                                        "description": "Reverse the output. So that noise = -noise + opacity",
                                        "type": "boolean"
                                    },
                                    "offsetZ": {
                                        "description": "Coordinate offset z",
                                        "type": "number"
                                    },
                                    "offsetY": {
                                        "description": "Height output offset y",
                                        "type": "number"
                                    },
                                    "irisBased": {
                                        "description": "If this generator uses the default iris swirly/wispy noise generator. Set to false for pure simplex.",
                                        "type": "boolean"
                                    },
                                    "opacity": {
                                        "description": "The output multiplier",
                                        "type": "number"
                                    },
                                    "bezier": {
                                        "description": "Apply a bezier curve on the output",
                                        "type": "boolean"
                                    },
                                    "exponent": {
                                        "description": "The exponent noise^EXPONENT",
                                        "type": "number"
                                    }
                                }
                            }
                        },
                        "opacity": {
                            "description": "The opacity, essentially a multiplier on the output.",
                            "type": "number"
                        },
                        "cliffHeightMax": {
                            "description": "Cliff Height Max. Disable with 0 for min and max",
                            "type": "number"
                        },
                        "cellFractureZoom": {
                            "description": "The size of the cell fractures",
                            "type": "number"
                        }
                    },
                    "required": [],
                    "$id": "http://volmit.com/iris-schema/irisgenerator.json"
                },
                "fileMatch": ["/generators/*.json"]
            },
            {
                "schema": {
                    "$schema": "http://json-schema.org/draft-07/schema#",
                    "description": "Represents a structure in iris.",
                    "title": "Structure",
                    "type": "object",
                    "properties": {
                        "gridHeight": {
                            "description": "This is the y size of each grid cell",
                            "type": "integer"
                        },
                        "tiles": {
                            "description": "The tiles",
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "ceiling": {
                                        "description": "Is this structure allowed to place if there is supposed to be a ceiling?",
                                        "type": "string"
                                    },
                                    "east": {
                                        "description": "Is this structure allowed to place if there is supposed to be a east wall?",
                                        "type": "string"
                                    },
                                    "south": {
                                        "description": "Is this structure allowed to place if there is supposed to be a south wall?",
                                        "type": "string"
                                    },
                                    "north": {
                                        "description": "Is this structure allowed to place if there is supposed to be a north wall?",
                                        "type": "string"
                                    },
                                    "objects": {
                                        "description": "List of objects to place centered in this tile",
                                        "type": "array",
                                        "items": {"type": "string"}
                                    },
                                    "west": {
                                        "description": "Is this structure allowed to place if there is supposed to be a west wall?",
                                        "type": "string"
                                    },
                                    "floor": {
                                        "description": "Is this structure allowed to place if there is supposed to be a floor?",
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "gridSize": {
                            "description": "This is the x and z size of each grid cell",
                            "type": "integer"
                        },
                        "wallChance": {
                            "description": "This is the wall chance. Higher values makes more rooms and less open halls",
                            "type": "number"
                        },
                        "maxLayers": {
                            "description": "This is the maximum layers iris will generate for (height cells)",
                            "type": "integer"
                        },
                        "name": {
                            "description": "This is the human readable name for this structure. Such as Red Dungeon or Tropical Village.",
                            "type": "string"
                        },
                        "mergeEdges": {
                            "description": "Edges of tiles replace each other instead of having their own.",
                            "type": "boolean"
                        }
                    },
                    "required": [],
                    "$id": "http://volmit.com/iris-schema/irisstructure.json"
                },
                "fileMatch": ["/structures/*.json"]
            }
        ]
    },
    "folders": [{"path": "."}]
}
